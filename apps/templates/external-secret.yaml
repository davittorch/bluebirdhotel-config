apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.externalSecret.name }}
  namespace: {{ .Values.externalSecret.namespace }}
spec:
  refreshInterval: {{ .Values.externalSecret.refreshInterval }}
  secretStoreRef:
    name: {{ .Values.externalSecret.secretStoreName }}
    kind: "ClusterSecretStore"
  target:
    name: {{ .Values.externalSecret.targetName }}
    creationPolicy: {{ .Values.externalSecret.creationPolicy }}
    namespace: {{ .Values.externalSecret.targetNamespace }}
  data:
    - secretKey: "host"
      remoteRef:
        key: {{ .Values.externalSecret.secretsKey }}
        property: "host"
    - secretKey: "username"
      remoteRef:
        key: {{ .Values.externalSecret.secretsKey }}
        property: "username"
    - secretKey: "password"
      remoteRef:
        key: {{ .Values.externalSecret.secretsKey }}
        property: "password"
    - secretKey: "dbname"
      remoteRef:
        key: {{ .Values.externalSecret.secretsKey }}
        property: "dbname"

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: {{ .Values.externalSecrets.namespace }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-manager-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-manager-rolebinding
subjects:
- kind: ServiceAccount
  name: external-secrets-sa
  namespace: {{ .Values.externalSecrets.namespace }}
roleRef:
  kind: Role
  name: secret-manager-role
  apiGroup: rbac.authorization.k8s.io